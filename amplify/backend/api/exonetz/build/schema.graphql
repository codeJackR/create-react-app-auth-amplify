type CreatorDetails @aws_iam @aws_api_key {
  id: ID!
  creator_id: ID!
  username: String
  email_id: AWSEmail!
  first_name: String
  last_name: String
  last_updated_at: AWSDateTime
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Creator @aws_iam @aws_api_key {
  id: ID!
  username: String!
  email_id: AWSEmail!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelCreatorDetailsConnection @aws_api_key @aws_iam {
  items: [CreatorDetails]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelCreatorDetailsFilterInput {
  id: ModelIDInput
  creator_id: ModelIDInput
  username: ModelStringInput
  email_id: ModelStringInput
  first_name: ModelStringInput
  last_name: ModelStringInput
  last_updated_at: ModelStringInput
  and: [ModelCreatorDetailsFilterInput]
  or: [ModelCreatorDetailsFilterInput]
  not: ModelCreatorDetailsFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getCreatorDetails(id: ID!): CreatorDetails @aws_api_key @aws_iam
  listCreatorDetailss(filter: ModelCreatorDetailsFilterInput, limit: Int, nextToken: String): ModelCreatorDetailsConnection @aws_api_key @aws_iam
  syncCreatorDetails(filter: ModelCreatorDetailsFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelCreatorDetailsConnection @aws_api_key @aws_iam
  getCreator(id: ID!): Creator @aws_api_key @aws_iam
  listCreators(filter: ModelCreatorFilterInput, limit: Int, nextToken: String): ModelCreatorConnection @aws_api_key @aws_iam
  syncCreators(filter: ModelCreatorFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelCreatorConnection @aws_api_key @aws_iam
}

input CreateCreatorDetailsInput {
  id: ID
  creator_id: ID!
  username: String
  email_id: AWSEmail!
  first_name: String
  last_name: String
  last_updated_at: AWSDateTime
  _version: Int
}

input UpdateCreatorDetailsInput {
  id: ID!
  creator_id: ID
  username: String
  email_id: AWSEmail
  first_name: String
  last_name: String
  last_updated_at: AWSDateTime
  _version: Int
}

input DeleteCreatorDetailsInput {
  id: ID!
  _version: Int
}

type Mutation {
  createCreatorDetails(input: CreateCreatorDetailsInput!, condition: ModelCreatorDetailsConditionInput): CreatorDetails @aws_api_key @aws_iam
  updateCreatorDetails(input: UpdateCreatorDetailsInput!, condition: ModelCreatorDetailsConditionInput): CreatorDetails @aws_api_key @aws_iam
  deleteCreatorDetails(input: DeleteCreatorDetailsInput!, condition: ModelCreatorDetailsConditionInput): CreatorDetails @aws_api_key @aws_iam
  createCreator(input: CreateCreatorInput!, condition: ModelCreatorConditionInput): Creator @aws_api_key @aws_iam
  updateCreator(input: UpdateCreatorInput!, condition: ModelCreatorConditionInput): Creator @aws_api_key @aws_iam
  deleteCreator(input: DeleteCreatorInput!, condition: ModelCreatorConditionInput): Creator @aws_api_key @aws_iam
}

input ModelCreatorDetailsConditionInput {
  creator_id: ModelIDInput
  username: ModelStringInput
  email_id: ModelStringInput
  first_name: ModelStringInput
  last_name: ModelStringInput
  last_updated_at: ModelStringInput
  and: [ModelCreatorDetailsConditionInput]
  or: [ModelCreatorDetailsConditionInput]
  not: ModelCreatorDetailsConditionInput
}

type Subscription {
  onCreateCreatorDetails: CreatorDetails @aws_subscribe(mutations: ["createCreatorDetails"]) @aws_api_key @aws_iam
  onUpdateCreatorDetails: CreatorDetails @aws_subscribe(mutations: ["updateCreatorDetails"]) @aws_api_key @aws_iam
  onDeleteCreatorDetails: CreatorDetails @aws_subscribe(mutations: ["deleteCreatorDetails"]) @aws_api_key @aws_iam
  onCreateCreator: Creator @aws_subscribe(mutations: ["createCreator"]) @aws_api_key @aws_iam
  onUpdateCreator: Creator @aws_subscribe(mutations: ["updateCreator"]) @aws_api_key @aws_iam
  onDeleteCreator: Creator @aws_subscribe(mutations: ["deleteCreator"]) @aws_api_key @aws_iam
}

type ModelCreatorConnection @aws_api_key @aws_iam {
  items: [Creator]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelCreatorFilterInput {
  id: ModelIDInput
  username: ModelStringInput
  email_id: ModelStringInput
  and: [ModelCreatorFilterInput]
  or: [ModelCreatorFilterInput]
  not: ModelCreatorFilterInput
}

input CreateCreatorInput {
  id: ID
  username: String!
  email_id: AWSEmail!
  _version: Int
}

input UpdateCreatorInput {
  id: ID!
  username: String
  email_id: AWSEmail
  _version: Int
}

input DeleteCreatorInput {
  id: ID!
  _version: Int
}

input ModelCreatorConditionInput {
  username: ModelStringInput
  email_id: ModelStringInput
  and: [ModelCreatorConditionInput]
  or: [ModelCreatorConditionInput]
  not: ModelCreatorConditionInput
}
